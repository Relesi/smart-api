package com.relesi.smart.api.services.impl;import com.relesi.smart.api.entities.Lancamento;import com.relesi.smart.api.repositories.LancamentoRepository;import com.relesi.smart.api.services.LancamentoService;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.domain.Page;import org.springframework.data.domain.PageRequest;import org.springframework.stereotype.Service;import java.util.Optional;    @Service    public class LancamentoServiceImpl implements LancamentoService {        private static final Logger log = LoggerFactory.getLogger(LancamentoServiceImpl.class);        @Autowired        private LancamentoRepository lancamentoRepository;        public Page<Lancamento> buscarPorFuncionarioId(Long funcionarioId, PageRequest pageRequest) {            log.info("Buscando lançamentos para o funcionário ID {}", funcionarioId);            return this.lancamentoRepository.findByFuncionarioId(funcionarioId, pageRequest);        }        public Optional<Lancamento> buscarPorId(Long id) {            log.info("Buscando um lançamento por ID {}", id);            return this.lancamentoRepository.findById(id);        }        public Lancamento persistir(Lancamento lancamento) {            log.info("Persistindo o Lançamento: {}", lancamento);            return this.lancamentoRepository.save(lancamento);        }        public void remover(Long id) {            log.info("Removendo lançamento ID: {}", id);            this.lancamentoRepository.deleteById(id);        }    }